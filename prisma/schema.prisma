// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  username      String?   @unique
  password      String
  emailVerified DateTime?
  image         String?
  role          Role      @default(CLIENT)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  assignedTasks Tasks[] @relation("TaskAssignee") // Tasks assigned TO this user
  createdTasks  Tasks[] @relation("TaskCreator") // Tasks created BY this user
}

model Tasks {
  taskId      String    @id @default(cuid())
  title       String
  description String?
  status      Status    @default(PENDING)
  dueDate     DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  assignedTo User   @relation("TaskAssignee", fields: [userId], references: [id])
  userId     String

  assignedBy   User    @relation("TaskCreator", fields: [assignedById], references: [id])
  assignedById String
  Timer        Timer[]

  project   Project? @relation(fields: [projectId], references: [id])
  projectId String?
}

model Timer {
  id        String    @id @default(cuid())
  startTime DateTime?
  endTime   DateTime?
  duration  Int?
  taskId    String // Add this field
  task      Tasks     @relation(fields: [taskId], references: [taskId])
}

model Project {
  id          String   @id @default(cuid())
  name        String
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  tasks       Tasks[]
}

enum Role {
  SUPER_ADMIN
  MANAGER
  PROFESSIONAL
  CLIENT
}

enum Status {
  PENDING
  IN_PROGRESS
  COMPLETED
  ON_HOLD
  CANCELLED
}
